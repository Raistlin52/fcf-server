# Generated by Django 2.0.3 on 2018-04-04 01:13

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Badge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.CharField(max_length=200)),
                ('img_file', models.CharField(blank=True, max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Bet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField()),
                ('odds', models.CharField(blank=True, max_length=50)),
                ('type', models.CharField(blank=True, choices=[('Moneyline', 'Moneyline'), ('Spread', 'Spread'), ('Over', 'Over'), ('Under', 'Under'), ('Parlay', 'Parlay'), ('Tease', 'Tease'), ('Interest', 'Interest')], max_length=50, null=True)),
                ('result', models.CharField(blank=True, choices=[(None, ''), ('Win', 'Win'), ('Lose', 'Lose'), ('Push', 'Push')], max_length=50, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('game_time', models.DateTimeField(blank=True, null=True)),
                ('network', models.CharField(blank=True, max_length=50)),
                ('money_line_home', models.CharField(blank=True, max_length=10)),
                ('money_line_away', models.CharField(blank=True, max_length=10)),
                ('spread_home', models.CharField(blank=True, max_length=10)),
                ('over_under', models.DecimalField(blank=True, decimal_places=1, max_digits=5, null=True)),
                ('away_final', models.IntegerField(blank=True, null=True)),
                ('home_final', models.IntegerField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Schedule',
            },
        ),
        migrations.CreateModel(
            name='HistoricBankroll',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('starting_bankroll', models.DecimalField(decimal_places=0, max_digits=100)),
            ],
        ),
        migrations.CreateModel(
            name='Leg',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('Moneyline', 'Moneyline'), ('Spread', 'Spread'), ('Over', 'Over'), ('Under', 'Under')], max_length=50)),
                ('leg', models.CharField(max_length=50)),
                ('odds', models.CharField(max_length=50)),
                ('result', models.CharField(blank=True, choices=[(None, ''), ('Win', 'Win'), ('Lose', 'Lose'), ('Push', 'Push')], max_length=50, null=True)),
                ('bet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='football.Bet')),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='football.Game')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('username', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='+', serialize=False, to=settings.AUTH_USER_MODEL, to_field='username')),
                ('bankroll', models.IntegerField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProfileBadge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('badge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='football.Badge')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='football.Profile')),
            ],
        ),
        migrations.CreateModel(
            name='RestaurantLocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
                ('location', models.CharField(blank=True, max_length=120, null=True)),
                ('category', models.CharField(blank=True, max_length=120, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Season',
            fields=[
                ('season_id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('league', models.CharField(max_length=120)),
                ('year', models.IntegerField()),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('abbr', models.CharField(max_length=3, primary_key=True, serialize=False)),
                ('city', models.CharField(max_length=100)),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Week',
            fields=[
                ('week_id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('week_number', models.DecimalField(decimal_places=0, max_digits=2)),
                ('betting_open', models.DateTimeField()),
                ('betting_close', models.DateTimeField()),
                ('season', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='football.Season')),
            ],
        ),
        migrations.AddField(
            model_name='historicbankroll',
            name='profile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='football.Profile'),
        ),
        migrations.AddField(
            model_name='historicbankroll',
            name='week',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='football.Week'),
        ),
        migrations.AddField(
            model_name='game',
            name='away',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='away_team', to='football.Team'),
        ),
        migrations.AddField(
            model_name='game',
            name='home',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='home_team', to='football.Team'),
        ),
        migrations.AddField(
            model_name='game',
            name='week',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='football.Week'),
        ),
        migrations.AddField(
            model_name='bet',
            name='profile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='football.Profile'),
        ),
        migrations.AlterUniqueTogether(
            name='profilebadge',
            unique_together={('profile', 'badge')},
        ),
        migrations.AlterUniqueTogether(
            name='leg',
            unique_together={('bet', 'game', 'type')},
        ),
        migrations.AlterUniqueTogether(
            name='historicbankroll',
            unique_together={('profile', 'week')},
        ),
    ]
